# nginx.vh.default.conf  --  docker-openresty
#
# This file is installed to:
#   `/etc/nginx/conf.d/default.conf`
#
# It tracks the `server` section of the upstream OpenResty's `nginx.conf`.
#
# This config (and any other configs in `etc/nginx/conf.d/`) is loaded by
# default by the `include` directive in `/usr/local/openresty/nginx/conf/nginx.conf`.
#
# See https://github.com/openresty/docker-openresty/blob/master/README.md#nginx-config-files
#

# HTTP Server
server {
	listen 80;
	server_name localhost;
	root /var/www/html;
	index index.php;
 
	set_real_ip_from 10.0.0.0/16;
    real_ip_recursive on;

	#location / {
	#	try_files $uri /index.php$is_args$args;
    #}

	location /alb-status {
    access_log off;
    return 200 'A-OK!';
    add_header Content-Type text/plain;
	}

	location ~ [^/]\.php(/|$) {
	#	proxy_pass http://vpc_cidr/;
		try_files $uri /index.php$is_args$args;
		proxy_pass http://localhost:80;

		### force timeouts if one of backend is died ##
		#proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;

		### Set headers ####
		proxy_set_header        Host            $host;
		proxy_set_header        X-Real-IP       $remote_addr;
		proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;

		### Most PHP, Python, Rails, Java App can use this header ###
		#proxy_set_header X-Forwarded-Proto https;##
		#This is better##
		proxy_set_header        X-Forwarded-Proto $scheme;
		#add_header              Front-End-Https   on;

		### By default we don't want to redirect it ####
		proxy_redirect     off;


		#CGI conf for Php-fpm
		# fastcgi_split_path_info ^(.+?\.php)(/.*)$;
		# if (!-f $document_root$fastcgi_script_name) {
		# 	return 404;
		# }
 
		fastcgi_pass php-fpm:9000;
		fastcgi_index index.php;
		include fastcgi_params;
		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
		fastcgi_param PATH_INFO $fastcgi_path_info;
		fastcgi_param PATH_TRANSLATED $document_root$fastcgi_path_info;
	}
}

# ######################################################################


# # HTTPS Server
server {
    listen               443 ssl;

    ssl_certificate      /etc/nginx/ssl/nginx.crt;
    ssl_certificate_key  /etc/nginx/ssl/nginx.key;
    server_name localhost;
 	root /var/www/html;
 	index index.php;


# 	### Add SSL specific settings here ###


 	ssl_protocols				SSLv3 TLSv1 TLSv1.1 TLSv1.2;
 	ssl_ciphers					RC4:HIGH:!aNULL:!MD5;
 	ssl_prefer_server_ciphers 	on;
 	keepalive_timeout    		60;
 	ssl_session_cache    		shared:SSL:10m;
 	ssl_session_timeout  		10m;

#     location / {
# 		try_files $uri /index.php$is_args$args;
#     }

#         # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
	location /alb-status {
    access_log off;
    return 200 'A-OK!';
    add_header Content-Type text/plain;
	}

#     #
 	location ~ [^/]\.php(/|$) {

		try_files $uri /index.php$is_args$args;
		proxy_pass https://localhost:443;

		### force timeouts if one of backend is died ##
		#proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;

		### Set headers ####
		proxy_set_header        Host            $host;
		proxy_set_header        X-Real-IP       $remote_addr;
		proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;

		### Most PHP, Python, Rails, Java App can use this header ###
		#proxy_set_header X-Forwarded-Proto https;##
		#This is better##
		proxy_set_header        X-Forwarded-Proto $scheme;
		#add_header              Front-End-Https   on;

		### By default we don't want to redirect it ####
		proxy_redirect     off;


		#CGI conf for Php-fpm
		# fastcgi_split_path_info ^(.+?\.php)(/.*)$;
		# if (!-f $document_root$fastcgi_script_name) {
		# 	return 404;
		# }
 
		fastcgi_pass php-fpm:9000;
		fastcgi_index index.php;
		include fastcgi_params;
		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
		fastcgi_param PATH_INFO $fastcgi_path_info;
		fastcgi_param PATH_TRANSLATED $document_root$fastcgi_path_info;
	 
# 		root /var/www/html/;
 	}
}